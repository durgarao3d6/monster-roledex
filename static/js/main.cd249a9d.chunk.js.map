{"version":3,"sources":["logo.svg","components/Card/Card.jsx","components/CardList/CardList.jsx","components/searchInput/SearchInput.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchInput","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,kBCGA,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,W,MCJf,SAASC,EAASR,GAC7B,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,S,MCNxB,SAASM,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACI,uBAAOC,KAAK,SACRb,UAAU,SACVW,YAAaA,EACbG,SAAUF,I,IC2BPG,E,kDA5Bb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXR,SAAU,GACVS,YAAY,IAJG,E,qDAQnB,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGvC,WAAS,IAAD,OACN,EAA6BE,KAAKR,MAA3BR,EAAP,EAAOA,SAASS,EAAhB,EAAgBA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAEA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAClG,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAaW,YAAa,iBACzBC,aAAc,SAACiB,GAAD,OAAK,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACxD,cAAC,EAAD,CAAUvB,SAAUiB,W,GAvBVO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd249a9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default function Card(props){\r\n    return(\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set4&size=140x140`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './CardList.css'\r\n\r\nexport default function CardList(props) {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './SearchInput.css';\r\n\r\nexport default function SearchInput({ placeholder, handleChange }) {\r\n    return (\r\n        <input type='search'\r\n            className='search'\r\n            placeholder={placeholder}\r\n            onChange={handleChange} />\r\n    )\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CardList from './components/CardList/CardList';\nimport SearchInput from './components/searchInput/SearchInput';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n\n  render(){\n    const {monsters,searchField}=this.state;\n    const filteredMonsters = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n      <div className='App'>\n        <h1>Monster Roledex</h1>\n        <SearchInput placeholder={'search monster'}\n         handleChange={(e)=>this.setState({searchField:e.target.value})}/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}